<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Graphs</title>
  <script src="https://d3js.org/d3.v7.min.js"></script>
</head>

<body>

  <!-- Column Chart -->
  <div id="columnChart"></div>
  <script>
    const userData = <%- JSON.stringify(userData) %>;

    // Set up SVG dimensions
    const margin = { top: 20, right: 20, bottom: 70, left: 40 },
      width = 600 - margin.left - margin.right,
      height = 400 - margin.top - margin.bottom;

    // Create SVG container
    const svgColumn = d3.select("#columnChart").append("svg")
      .attr("width", width + margin.left + margin.right)
      .attr("height", height + margin.top + margin.bottom)
      .append("g")
      .attr("transform", `translate(${margin.left},${margin.top})`);

    // Set up scales
    const x = d3.scaleBand().range([0, width]).padding(0.4),
      y = d3.scaleLinear().range([height, 0]);

    x.domain(userData.map(d => d.name));
    y.domain([0, d3.max(userData, d => d.ordersCount)]);

    // Append x-axis
    svgColumn.append("g")
      .attr("transform", `translate(0,${height})`)
      .call(d3.axisBottom(x));

    // Append y-axis
    svgColumn.append("g").call(d3.axisLeft(y));

    // Append rectangles
    svgColumn.selectAll("rect")
      .data(userData)
      .enter().append("rect")
      .attr("x", d => x(d.name))
      .attr("y", d => y(d.ordersCount))
      .attr("width", x.bandwidth())
      .attr("height", d => height - y(d.ordersCount))
      .attr("fill", "steelblue");

    svgColumn.append("text")
      .attr("transform", `translate(${width},${margin.top})`)
      .style("text-anchor", "end")
      .style("font-size", "16px")
      .style("font-weight", "bold")
      .text("Purchases per Product");
  </script>

  <!-- Pie Chart -->
  <div id="pieChart"></div>
  <script>
    const productData = <%- JSON.stringify(productData) %>;

    // Set up pie chart dimensions
    const widthPie = 450,
      heightPie = 450,
      radius = Math.min(widthPie, heightPie) / 2;

    // Create SVG container for pie chart
    const svgPie = d3.select("#pieChart").append("svg")
      .attr("width", widthPie)
      .attr("height", heightPie + 50)
      .append("g")
      .attr("transform", `translate(${widthPie / 2},${heightPie / 2 + 25})`);

    // Set up pie chart
    const pie = d3.pie().value(d => d.count)(productData),
      arc = d3.arc().innerRadius(0).outerRadius(radius);

    // Calculate total number of products
    const totalProducts = productData.reduce((total, product) => total + product.count, 0);

    // Draw pie chart
    svgPie.selectAll("path")
      .data(pie)
      .enter().append("path")
      .attr("d", arc)
      .attr("fill", d => d.data.price === 'above10' ? "blue" : "orange"); // Adjusted color assignment

    // Append text to each slice
    svgPie.selectAll("text")
      .data(pie)
      .enter().append("text")
      .attr("transform", d => `translate(${arc.centroid(d)})`)
      .attr("dy", ".35em")
      .style("text-anchor", "middle")
      .style("font-size", 12)
      .attr("fill", "black")
      .text(d => `${((d.data.count / totalProducts) * 100).toFixed(2)}%`);

    svgPie.append("text")
      .attr("transform", `translate(${-widthPie/4},${heightPie/2 + 20})`)
      .style("text-anchor", "middle")
      .style("font-size", "12px")
      .attr("fill", "blue")
      .text("Above $10");

    svgPie.append("text")
      .attr("transform", `translate(${widthPie/4},${heightPie/2 + 20})`)
      .style("text-anchor", "middle")
      .style("font-size", "12px")
      .attr("fill", "orange")
      .text("Below $10");
  </script>

<div style="margin-top: 30px;">
    <button onclick="location.href='/'" class="btn btn-primary mb-3">Return to Home</button>
</div>
    
</body>

</html>
